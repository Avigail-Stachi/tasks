@baseUrl = http://localhost:5000

@ownerAccessToken =eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NWRiYjA3NjcyMzkyZGYxZTUzZjBiMCIsInJvbGUiOiJvd25lciIsImlhdCI6MTc1MTAzNDYyOCwiZXhwIjoxNzUxMDM1NTI4fQ.W5zWYlVLiiH6gmE_pLUrY7xdJZtNHo6umNaw9vAHblU
@ownerRefreshToken =eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NWRiYjA3NjcyMzkyZGYxZTUzZjBiMCIsImlhdCI6MTc1MTAzNDYyOCwiZXhwIjoxNzUxNjM5NDI4fQ.qpSHALMhO021TOaqS2dFZx_-7rKTJm1wtaY4tejLpD0
@supplierAccessToken =eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NWRiY2NjNTE4YjgxOWE2MzkxYWU5NyIsInJvbGUiOiJzdXBwbGllciIsImlhdCI6MTc1MTAzNDY2MywiZXhwIjoxNzUxMDM1NTYzfQ.kUNO_EKolBz65Y1eXALhQeQ7GhjD4aZn4feUCf8sTqg
@supplierRefreshToken =eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NWRiY2NjNTE4YjgxOWE2MzkxYWU5NyIsImlhdCI6MTc1MTAzNDY2MywiZXhwIjoxNzUxNjM5NDYzfQ.MD52UX8zzWY-Dy0WEDNMOkMG1gbZt1a3db73KyDgGoU
@supplierAccessToken2=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NWVhMjZlZjc0MzZlZGVhODlmZWYyZCIsInJvbGUiOiJzdXBwbGllciIsImlhdCI6MTc1MTAzMjY1NiwiZXhwIjoxNzUxMDMzNTU2fQ.9x7nf78P69yfEMugYTDsFQYjM-qKhY8td3wplYgGzm4
@supplierRefreshToken2=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NWVhMjZlZjc0MzZlZGVhODlmZWYyZCIsImlhdCI6MTc1MTAzMjY1NiwiZXhwIjoxNzUxNjM3NDU2fQ.DT658a-1EyZVOFCCMaEh7xLio7RbqT6F4kesup-Tz-0
//בדיקה שהשרת רץ
GET {{baseUrl}}/


// טבלת משתמשים

###
// הוספת משתמש מנהל ראשי
// רק פעם אחת
POST {{baseUrl}}/users/registerUser
Content-Type: application/json
{
    "userName": "avigail",
    "password": "Avigail&1",
    "role": "owner"
}

###
// הוספת ספק
POST {{baseUrl}}/users/registerUser
Content-Type: application/json

{
    "userName": "david",
    "password": "David&11",
    "role": "supplier",
    "companyName": "everything 4 u",
    "phone": "0527137119",
    "contactName": "Rachel"
}

###
// כניסה מנהל ושמירת טוקן
POST {{baseUrl}}/users/loginUser
Content-Type: application/json

{
    "userName": "avigail",
    "password": "Avigail&1"
}
###
//כניסת ספק ושמירת טוקן
POST {{baseUrl}}/users/loginUser
Content-Type: application/json

{
    "userName": "david",
    "password": "David&11"
}
###
//ליצור משתמש ספק על ידי המנהל הקיים
POST {{baseUrl}}/users/create
Content-Type: application/json
Authorization: Bearer {{ownerAccessToken}}

{
    "userName": "michal",
    "password": "Michal&1",
    "role": "supplier",
    "companyName": "bearss",
    "phone": "0524384551",
    "contactName": "dubi"
}
###

//יצירת משתמש על ידי הספק - לא אמור לעבוד
POST {{baseUrl}}/users/create
Content-Type: application/json
Authorization: Bearer {{supplierAccessToken}} // Should fail (403)

{
    "userName": "unauthorized_user",
    "password": "UnauthorizedPass123!",
    "role": "supplier",
    "companyName": "Unauthorized Co.",
    "phone": "0531112233",
    "contactName": "Bad Actor"
}
###


//הוספת ספק נוסף
POST {{baseUrl}}/users/registerUser
Content-Type: application/json

{
    "userName": "shahar",
    "password": "Shahar&1",
    "role": "supplier",
    "companyName": "what you need",
    "phone": "0522226962",
    "contactName": "Tal"
}
###
//כניסה לספק
###
POST {{baseUrl}}/users/loginUser
Content-Type: application/json

{
    "userName": "shahar",
    "password": "Shahar&1"
}


//הוספת מוצר לספק הזה
###
POST {{baseUrl}}/products
Content-Type: application/json
Authorization: Bearer {{supplierAccessToken2}}

{
    "name": "Organic Apples",
    "price": 12.50,
    "minQuantity": 5
}
###
//הצגת המוצרים של הספק הזה
###
GET {{baseUrl}}/products/shahar
Authorization: Bearer {{supplierAccessToken2}}

###
// ריענון טוקן
POST {{baseUrl}}/users/refreshToken
Content-Type: application/json

{
    "refreshToken": "{{ownerRefreshToken}}"
}
###

// יציאת משתמש מנהל
POST {{baseUrl}}/users/logout
Content-Type: application/json

{
    "refreshToken": "{{ownerRefreshToken}}"
}
###

//ניסיון לריענון טוקן לאחר יציאה - אמור להיכשל
POST {{baseUrl}}/users/refreshToken
Content-Type: application/json

{
    "refreshToken": "{{ownerRefreshToken}}"
}


//טבלת מוצרים
###
//יצירת מוצר כספק
POST {{baseUrl}}/products
Content-Type: application/json
Authorization: Bearer {{supplierAccessToken}}

{
    "name": "Organic Apples",
    "price": 12.50,
    "minQuantity": 5
}
###

//יצירת מוצג נוסף כספק
POST {{baseUrl}}/products
Content-Type: application/json
Authorization: Bearer {{supplierAccessToken}}

{
    "name": "Fresh Oranges",
    "price": 8.00,
    "minQuantity": 10
}
###

//יצירת מוצר קיים לאותו ספק, כלומר אותו שם, אמור להיכשל
POST {{baseUrl}}/products
Content-Type: application/json
Authorization: Bearer {{supplierAccessToken}}

{
    "name": "Organic Apples",
    "price": 13.00,
    "minQuantity": 6
}
###

//יצירת מוצר כמנהל - אמור להיכשל
POST {{baseUrl}}/products
Content-Type: application/json
Authorization: Bearer {{ownerAccessToken}}

{
    "name": "Forbidden Product",
    "price": 100,
    "minQuantity": 1
}
###

//קבלת כל המוצרים כמנהל
GET {{baseUrl}}/products
Authorization: Bearer {{ownerAccessToken}}
###

//קבלת מוצרים לפי ספק
GET {{baseUrl}}/products/david
Authorization: Bearer {{supplierAccessToken}}


//טבלת הזמנות

//יצירת הזמנה כמנהל
###
POST {{baseUrl}}/orders
Content-Type: application/json
Authorization: Bearer {{ownerAccessToken}}

{
    "supplier": "685dbccc518b819a6391ae97",
    "products": [
        {
            "product": "685ea102f7436edea89fef21",
            "quantity": 15
        },
        {
            "product": "685ea115f7436edea89fef24",
            "quantity": 20
        }
    ]
}
###

//יצירת הזמנה כספק - אמור להיכשל
POST {{baseUrl}}/orders
Content-Type: application/json
Authorization: Bearer {{supplierAccessToken2}}

{
    "supplier": "685dbccc518b819a6391ae97",
    "products": [
        {
            "product": "685ea102f7436edea89fef21",
            "quantity": 15
        },
        {
            "product": "685ea115f7436edea89fef24",
            "quantity": 20
        }
    ]
}
###

//הצגת כל ההזמנות כמנהל
GET {{baseUrl}}/orders
Authorization: Bearer {{ownerAccessToken}}
###

//הצגת ההזמנות כספק
GET {{baseUrl}}/orders
Authorization: Bearer {{supplierAccessToken}}
###


//שינוי הזמנה לבתהליך על ידי הספק
PUT {{baseUrl}}/orders/1/status
Content-Type: application/json
Authorization: Bearer {{supplierAccessToken}}

{
    "status": "in progress"
}
###

//שינוי הזמנה להושלמה על ידי הספק - לא אמור לעבוד
PUT {{baseUrl}}/orders/1/status
Content-Type: application/json
Authorization: Bearer {{supplierAccessToken}}

{
    "status": "completed"
}
###


//עדכון הזמנה להושלמה על ידי המנהל
PUT {{baseUrl}}/orders/1/status
Content-Type: application/json
Authorization: Bearer {{ownerAccessToken}}

{
    "status": "completed"
}
###

//שינו סטטוס הזמנה לבתהליך על ידי המנהל - לא אמור לעבוד
PUT {{baseUrl}}/orders/1/status
Content-Type: application/json
Authorization: Bearer {{ownerAccessToken}}

{
    "status": "in progress"
}
###

// --- 5. Error & Edge Cases ---

// 5.1. Attempt with no token (should fail 401)
GET {{baseUrl}}/products
###

// 5.2. Attempt with invalid token (change a character in the token - should fail 403)
GET {{baseUrl}}/products
Authorization: Bearer {{supplierAccessToken}}INVALID
###

// 5.4. Attempt to create order with product not belonging to supplier (should fail 422)
// You might need two different suppliers and products for this test.
// Supplier A has Product A. Supplier B tries to order Product A from Supplier B.
// This requires creating another supplier and product for that supplier.

// Assume you have another supplier `other_supplier_user` and their product `Other Product`.
// Login `other_supplier_user` and get their product ID.
// Then try to create an order as owner for `supplier_user` using `Other Product`.

/*
// --- For testing 5.4, first register and login another supplier ---
// Register another supplier
POST {{baseUrl}}/users/registerUser
Content-Type: application/json

{
    "userName": "supplier_user_B",
    "password": "SupplierBPass123!",
    "role": "supplier",
    "companyName": "Supplier B Co.",
    "phone": "0549876543",
    "contactName": "Bob Johnson"
}
###

// Login supplier_user_B and get accessToken (save as @supplierBAccessToken)
POST {{baseUrl}}/users/loginUser
Content-Type: application/json

{
    "userName": "supplier_user_B",
    "password": "SupplierBPass123!"
}
###
// Save @supplierBAccessToken = ...

###
// Note down the ID of "Supplier B Product". Let's call it <PRODUCT_ID_SUPPLIER_B_FROM_DB>

// Now, attempt 5.4: Create order for 'supplier_user' but with a product from 'supplier_user_B'
POST {{baseUrl}}/orders
Content-Type: application/json
Authorization: Bearer {{ownerAccessToken}}

{
    "supplier": "<SUPPLIER_ID_FOR_ORIGINAL_SUPPLIER_USER_FROM_DB>", // ID of supplier_user
    "products": [
        {
            "product": "<PRODUCT_ID_SUPPLIER_B_FROM_DB>", // Product ID of supplier_user_B
            "quantity": 5
        }
    ]
}
###
*/
